"""–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: —Å–ø–∏—Å–æ–∫ –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π (–∑–∞–≥–ª—É—à–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö)."""
from __future__ import annotations

import os
import requests
import streamlit as st


def _get_api_base() -> str:
    # –í compose —É –Ω–∞—Å API_URL, –Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–º –∏ API_BASE_URL –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    return os.getenv("API_URL") or os.getenv("API_BASE_URL") or "http://api:8000"


def render() -> None:
    st.title("üè† –î–æ–º–∞—à–Ω—è—è")
    st.caption("–û–±–∑–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –±—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏")

    api = _get_api_base()
    headers = {}
    token = st.session_state.get("token") if isinstance(st.session_state, dict) else None
    if token:
        headers["Authorization"] = f"Bearer {token}"

    engines = []
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è; –µ—Å–ª–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è ‚Äî –ø–æ–∑–∂–µ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º
        r = requests.get(f"{api}/api/v1/equipment", headers=headers, timeout=10)
        if r.status_code == 200:
            engines = r.json() or []
    except Exception:
        pass

    if not engines:
        st.info(
            "–¢—É—Ç –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π. –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
            icon="‚ÑπÔ∏è",
        )
        st.write("\n")
        st.write("–ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞.")
        return

    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –µ—Å—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫
    for item in engines:
        with st.container(border=True):
            title = item.get("name") or item.get("id") or "–î–≤–∏–≥–∞—Ç–µ–ª—å"
            st.subheader(str(title))
            st.caption(item.get("description") or "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è")
            cols = st.columns(3)
            with cols[0]:
                st.metric("ID", str(item.get("id")))
            with cols[1]:
                st.metric("–°—Ç–∞—Ç—É—Å", item.get("status") or "n/a")
            with cols[2]:
                st.metric("–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", item.get("updated_at") or "‚Äî")
            st.button("–û—Ç–∫—Ä—ã—Ç—å —Ç—Ä–µ–Ω–¥—ã", key=f"open_trends_{item.get('id')}")
