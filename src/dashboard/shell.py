"""Streamlit UI shell —Å –±–æ–∫–æ–≤—ã–º –º–µ–Ω—é –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å—Ç–∏–ª–µ–º"""
from __future__ import annotations

import os
import streamlit as st

try:
    from streamlit_option_menu import option_menu  # type: ignore
except Exception:  # –ø–∞–∫–µ—Ç –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ dev-–æ–±—Ä–∞–∑–µ
    option_menu = None  # type: ignore

# –¢—É–º–±–ª–µ—Ä: –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞
if os.getenv("DASHBOARD_SIMPLE_MENU") in {"1", "true", "True", "yes"}:
    option_menu = None  # type: ignore


def _inject_corporate_style() -> None:
    """–í—Å—Ç–∞–≤–ª—è–µ—Ç CSS: —Ñ–∏—Ä–º–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –±–∞–∑–æ–≤–∞—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è."""
    st.markdown(
        """
        <style>
        :root {
            --primary: #003057;
            --blue-500: #0095D9;
            --blue-300: #5DC9F5;
            --text: #0B1F35;
            --bg: #FFFFFF;
            --bg-2: #F5F8FF;
        }
        h1, h2, h3, h4, h5, h6 { color: var(--text) !important; }
        h1 { border-left: 6px solid var(--primary); padding-left: 10px; }
        .stButton>button { background: var(--primary) !important; color: #fff !important; border: 0; border-radius: 6px; }
        .stApp { background: var(--bg) !important; }
        .stSidebar { background: var(--bg-2) !important; }
        a { color: var(--blue-500); }
        </style>
        """,
        unsafe_allow_html=True,
    )


def main() -> None:
    st.set_page_config(
        page_title="–£–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
        page_icon="‚öôÔ∏è",
        layout="wide",
        initial_sidebar_state="expanded",
    )

    _inject_corporate_style()

    # –ï–¥–∏–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—à–∞–ø–∫–∞)
    st.markdown("## üß† –£–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")

    # –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
    with st.sidebar:
        st.markdown("### ‚öôÔ∏è –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞")
        st.caption("–°–∞–π–¥–±–∞—Ä –≤–∫–ª—é—á—ë–Ω –¥–ª—è –¥–µ–º–æ. –í –ø—Ä–æ–¥—É–∫—Ç–∏–≤–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –±—É–¥–µ—Ç —Å–∫—Ä—ã—Ç.")
        # –ö–Ω–æ–ø–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
        if st.button("üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç"):
            st.toast("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", icon="‚ö†Ô∏è")
        pages = [
            "–ì–ª–∞–≤–Ω–∞—è",
            "–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)",
            "–ü—Ä–∏–∑–Ω–∞–∫–∏ –∏ –≥—Ä—É–ø–ø—ã (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–æ–¥–µ–ª–∏ –ò–ò)",
            "–ê–Ω–æ–º–∞–ª–∏–∏ –∏ –ø—Ä–æ–≥–Ω–æ–∑",
            "–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
        ]
        if option_menu is not None:
            choice = option_menu(
                "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
                pages,
                icons=["house", "cloud-upload", "diagram-3", "exclamation-triangle", "activity"],
                menu_icon="menu-button-wide",
                default_index=0,
            )
        else:
            st.info("–£–ø—Ä–æ—â—ë–Ω–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ streamlit_option_menu", icon="‚ÑπÔ∏è")
            choice = st.radio("–ù–∞–≤–∏–≥–∞—Ü–∏—è", pages, index=0)

    # –ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü (—á–µ—Ä–µ–∑ session_state.navigate_to)
    nav_target = st.session_state.pop("navigate_to", None) if isinstance(st.session_state, dict) else None
    if nav_target in pages:
        choice = nav_target

    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è
    if choice == "–ì–ª–∞–≤–Ω–∞—è":
        from dashboard.pages_shell import home as page
    elif choice == "–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)":
        from dashboard.pages_shell import raw_upload as page
    elif choice == "–ü—Ä–∏–∑–Ω–∞–∫–∏ –∏ –≥—Ä—É–ø–ø—ã (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–æ–¥–µ–ª–∏ –ò–ò)":
        from dashboard.pages_shell import features_clusters as page
    elif choice == "–ê–Ω–æ–º–∞–ª–∏–∏ –∏ –ø—Ä–æ–≥–Ω–æ–∑":
        from dashboard.pages_shell import anomalies_forecast as page
    else:
        from dashboard.pages_shell import system_monitoring as page

    page.render()


if __name__ == "__main__":
    main()
